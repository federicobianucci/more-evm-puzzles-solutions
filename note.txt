############
# Puzzle 4 #
############

60 00
80
80
80
60 02
34 
04 <- div = callvalue/2
60 00 
5A <- gas
F1 <-call
60 01
60 18
60 00
39
60 01
60 00
f3

0x60008080806002340460005af16001601860003960016000f300

############
# Puzzle 7 #
############

01      34        CALLVALUE     2

02      5B        JUMPDEST      1
03      6001      PUSH1 01      3
05      90        SWAP1         3
06      03        SUB           3
07      80        DUP1          3
08      6000      PUSH1 00      3
0A      14        EQ            3
0B      6011      PUSH1 11      3
0D      57        JUMPI         10
0E      6002      PUSH1 02      3
10      56        JUMP          8

11      5B        JUMPDEST      3

5 + 43 * x - 11 = 166

############
# Puzzle 8 #
############
# NOTE: this puzzle is not well written if you go to https://www.evm.codes/playground it should pass even with an empty contract (calldata: 0x)

# init
0x6012600c60003960126000f3
# runtime
60016080526001608060006000034335af1

############
# Puzzle 9 #
############

# find kekkak256(value) than starts with a8
PUSH32 1
JUMPDEST
DUP1
PUSH1 0
MSTORE
PUSH1 32
PUSH1 0
SHA3
PUSH1 0xF8
SHR
PUSH1 0xA8
EQ
PUSH1 0x3a
JUMPI
PUSH1 1
ADD
PUSH1 0x21
JUMP
JUMPDEST
STOP



